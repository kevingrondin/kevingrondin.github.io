"use strict";(self.webpackChunkkevingrondin=self.webpackChunkkevingrondin||[]).push([[7304],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(t),m=r,v=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return t?a.createElement(v,o(o({ref:n},c),{},{components:t})):a.createElement(v,o({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:function(e,n,t){t.d(n,{Z:function(){return o}});var a=t(7294),r=t(6010),i="tabItem_Ymn6";function o(e){var n=e.children,t=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:t},n)}},5488:function(e,n,t){t.d(n,{Z:function(){return m}});var a=t(7462),r=t(7294),i=t(6010),o=t(2389),l=t(7392),s=t(7094),u=t(2466),c="tabList__CuJ",d="tabItem_LNqP";function p(e){var n,t,o=e.lazy,p=e.block,m=e.defaultValue,v=e.values,f=e.groupId,k=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=v?v:g.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),h=(0,l.l)(b,(function(e,n){return e.value===n.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var N=null===m?m:null!=(n=null!=m?m:null==(t=g.find((function(e){return e.props.default})))?void 0:t.props.value)?n:g[0].props.value;if(null!==N&&!b.some((function(e){return e.value===N})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,s.U)(),x=w.tabGroupChoices,y=w.setTabGroupChoices,T=(0,r.useState)(N),j=T[0],P=T[1],O=[],S=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var E=x[f];null!=E&&E!==j&&b.some((function(e){return e.value===E}))&&P(E)}var V=function(e){var n=e.currentTarget,t=O.indexOf(n),a=b[t].value;a!==j&&(S(n),P(a),null!=f&&y(f,String(a)))},A=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a,r=O.indexOf(e.currentTarget)+1;t=null!=(a=O[r])?a:O[0];break;case"ArrowLeft":var i,o=O.indexOf(e.currentTarget)-1;t=null!=(i=O[o])?i:O[O.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":p},k)},b.map((function(e){var n=e.value,t=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:j===n?0:-1,"aria-selected":j===n,key:n,ref:function(e){return O.push(e)},onKeyDown:A,onFocus:V,onClick:V},o,{className:(0,i.Z)("tabs__item",d,null==o?void 0:o.className,{"tabs__item--active":j===n})}),null!=t?t:n)}))),o?(0,r.cloneElement)(g.filter((function(e){return e.props.value===j}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==j})}))))}function m(e){var n=(0,o.Z)();return r.createElement(p,(0,a.Z)({key:String(n)},e))}},6782:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return m}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),o=t(5488),l=t(5162),s=["components"],u={sidebar_position:10},c="\ud83d\udd29 Astuce",d={unversionedId:"React Native/create-project/astuce",id:"React Native/create-project/astuce",title:"\ud83d\udd29 Astuce",description:"Quelque astuce \xe0 savoir sur la technologie React Native",source:"@site/docs/React Native/create-project/astuce.mdx",sourceDirName:"React Native/create-project",slug:"/React Native/create-project/astuce",permalink:"/wiki/docs/React Native/create-project/astuce",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/React Native/create-project/astuce.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"\u23f3 Background",permalink:"/wiki/docs/React Native/create-project/background"},next:{title:"\ud83d\udea2 Navigation",permalink:"/wiki/docs/React Native/wireframe/navigation"}},p={},m=[{value:"Android Natif",id:"android-natif",level:2},{value:"Ecran blanc avant SplashScreen",id:"ecran-blanc-avant-splashscreen",level:3},{value:"Bloquer l&#39;ecran en mode portrait",id:"bloquer-lecran-en-mode-portrait",level:3},{value:"ScreenShot",id:"screenshot",level:3},{value:"Javascript",id:"javascript",level:2},{value:"Bind",id:"bind",level:3},{value:"React Native",id:"react-native",level:2},{value:"BackButon avec useEffect",id:"backbuton-avec-useeffect",level:3},{value:"BackHandler",id:"backhandler",level:3},{value:"Button",id:"button",level:3},{value:"Flatlist",id:"flatlist",level:3},{value:"Route",id:"route",level:3},{value:"OnBoarding",id:"onboarding",level:3},{value:"Toast",id:"toast",level:3},{value:"Vibration",id:"vibration",level:3},{value:"Outil externe",id:"outil-externe",level:2},{value:"D\xe9ploiement facile",id:"d\xe9ploiement-facile",level:3}],v={toc:m};function f(e){var n=e.components,t=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},v,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"-astuce"},"\ud83d\udd29 Astuce"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Quelque astuce \xe0 savoir sur la technologie React Native")),(0,i.kt)("h2",{id:"android-natif"},"Android Natif"),(0,i.kt)("h3",{id:"ecran-blanc-avant-splashscreen"},"Ecran blanc avant SplashScreen"),(0,i.kt)("p",null,"Petite sp\xe9cificit\xe9 qui permet de savoir si une application est r\xe9alis\xe9 en react native c'est un ecran blanc qui s'affiche avant sont ouverture"),(0,i.kt)("p",null,"Dans notre fichier ",(0,i.kt)("strong",{parentName:"p"},"styles.xml")," on ajoute les balises suivante dans la balise ",(0,i.kt)("strong",{parentName:"p"},"style")," ",(0,i.kt)("strong",{parentName:"p"},"windowDisablePreview")," desactive cette \xe9cran"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<item name="android:textColor">#000000</item>\n<item name="android:windowDisablePreview">true</item>\n<item name="android:windowNoTitle">true</item>\n<item name="android:windowActionBar">false</item>\n<item name="android:windowFullscreen">true</item>\n<item name="android:windowContentOverlay">@null</item>\n<item name="android:windowIsTranslucent">true</item>\n')),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Attention")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Cela peu engendr\xe9 des bugs, ne pas l'ins\xe9rer pendant la p\xe9riode de d\xe9veloppement"))),(0,i.kt)("h3",{id:"bloquer-lecran-en-mode-portrait"},"Bloquer l'ecran en mode portrait"),(0,i.kt)("p",null,"On veut que quand le portable passe en paysage, le smartphone reste en mode portrait"),(0,i.kt)("p",null,"Dans le fichier ",(0,i.kt)("strong",{parentName:"p"},"AndroidManifest.xml")," on ajoute un attribut dans la balise ",(0,i.kt)("strong",{parentName:"p"},"activity")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<activity\n...\nandroid:screenOrientation="portrait" />\n')),(0,i.kt)("h3",{id:"screenshot"},"ScreenShot"),(0,i.kt)("p",null,"Si on veut eviter de diffuser des screenshot d'application avec des information confidentielle des clients, on bloque les screenshot"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MainActivity.java"',title:'"MainActivity.java"'},"import android.os.Bundle;\nimport android.view.WindowManager;\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\n}\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Si on veux forcer le n\xe9ttoyage d'Android dans le repertoire ",(0,i.kt)("strong",{parentName:"p"},"android"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"gradlew clean\n")),(0,i.kt)("h2",{id:"javascript"},"Javascript"),(0,i.kt)("h3",{id:"bind"},"Bind"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Permet de pr\xe9charger les fonctions")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Pressable } from 'react-native';\n\nfonction Item({edit, id}) {\n    return (\n        <View>\n            <Pressable \n                onPress={edit.bind(this, id)}\n            >\n                <Text>{item.name}</Text>\n            </Pressable>\n        </View>\n    );\n}\n")),(0,i.kt)("h2",{id:"react-native"},"React Native"),(0,i.kt)("h3",{id:"backbuton-avec-useeffect"},"BackButon avec useEffect"),(0,i.kt)("p",null,"Quand on revien sur une page qui est d\xe9ja pass\xe9, le useEffect ne se relance plus"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'// en dehors de la fonction principale avec les autres import\nimport { useIsFocused } from "@react-navigation/native";\n\n// Dans la fonction principale\nconst isFocused = useIsFocused();\n\nReact.useEffect(() => {\n  if (isFocused) {\n    // chose \xe0 faire quand on revient sur la page\n  }\n}, [isFocused]);\n')),(0,i.kt)("h3",{id:"backhandler"},"BackHandler"),(0,i.kt)("p",null,"Sur certaine vue on veut bloquer le retour en arri\xe8re"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'// on rajoute BackHandler dans l\'import react-natif\nimport { BackHandler } from "react-native";\n\n// dans la fonction principale\nReact.useEffect(() => {\n  BackHandler.addEventListener("hardwareBackPress", () => true);\n  return () => BackHandler.removeEventListener("hardwareBackPress", () => true);\n}, []);\n')),(0,i.kt)("h3",{id:"button"},"Button"),(0,i.kt)("p",null,"Les element Pressable n'ont pas d'interactivit\xe9 UI, pour en rajouter"),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"Android",mdxType:"TabItem"},(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"L'attribut ",(0,i.kt)("strong",{parentName:"p"},"android_ripple")," est disponible que pour Android")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"<Pressable\n    android_ripple={{\n        color: '#ff0000',\n        borderless: true,\n        radius: 10,\n    }}\n    onPress={() => navigation.navigate(\"Android\")}\n>\n    <Text>Android</Text>\n</Pressable>\n"))),(0,i.kt)(l.Z,{value:"IOS",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'<Pressable\n    style={ pressData => pressData.pressed && { opacity: 0.5 } }\n    onPress={() => navigation.navigate("Android")}\n>\n    <Text>Android</Text>\n</Pressable>\n')))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"// on peu rajouter de l'animation\nconst animatedValue = new Animated.Value(1);\n\nconst onPressIn = () => {\n    Animated.spring(animatedValue, {\n        toValue: 0.9,\n        useNativeDriver: true\n    }).start()\n}\n\nconst onPressOut = () => {\n    Animated.spring(animatedValue, {\n        toValue: 1,\n        useNativeDriver: true\n    }).start()\n}\n\nconst animatedStyle = {\n    transform: [{scale: animatedValue }]\n}\n\nreturn (\n    <Animated.View style={animatedStyle}>\n        <TouchableHighlight\n            style={tw`rounded-xl`}\n            onPressIn={onPressIn}\n            onPressOut={onPressOut}\n        >\n            <View style={tw`flex justify-center items-center w-full h-16 bg-blue-600 rounded-xl`}>\n                <Text style={tw`text-white text-xl`}>{title}</Text>\n            </View>\n        </TouchableHighlight>\n    </Animated.View>\n)\n")),(0,i.kt)("h3",{id:"flatlist"},"Flatlist"),(0,i.kt)("p",null,"Un peu plus optimis\xe9 que ScrollView vous avez Flatlist"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"const [items, setItems] = useState([])\n\n// Exemple avec ScrollView\n<ScrollView>\n    {items.map((item, index) => (\n        <View key={index}>\n            <Text>{item.title}</Text>\n        </View>\n    ))}\n</ScrollView>\n\n// Exemple avec Flatlist\n<FlatList\n    data={items}\n    renderItem={({ item }) => (\n        <View>\n            <Text>{item.title}</Text>\n        </View>\n    )}\n    keyExtractor={(item, index) => index}\n/>\n")),(0,i.kt)("h3",{id:"route"},"Route"),(0,i.kt)("p",null,"Si on est dans un composant qui\n",(0,i.kt)("em",{parentName:"p"}," n'h\xe9rite de ",(0,i.kt)("strong",{parentName:"em"},"navigation"))," n'est pas definis dans la liste des routes possible"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useNavigation } from "@react-navigation/core";\nimport { NativeStackNavigationProp } from "@react-navigation/native-stack";\n\n// si vous avez d\xe9fini une StackParams vous pouvez l\'importer ici\nimport StackParams from \'../navigation\'\n\n// dans la foncition principale\nconst navigation = useNavigation<NativeStackNavigationProp<StackParams>>();\n')),(0,i.kt)("h3",{id:"onboarding"},"OnBoarding"),(0,i.kt)("p",null,"Generalement en intro application pour expliquer son fonctionnement"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import AppIntroSlider from 'react-native-app-intro-slider';\n\n// data des diff\xe9rente slides\nconst slides = [\n    {\n        key: 1,\n        title: 'Premier titre',\n        text: 'Description',\n        image: 'Image'\n    }\n];\n\nconst onBoarding = () => {\n\n    //Rendu d'une slide\n    const _renderItem = ({ item }) => (\n        <View>\n            <Image source={item.image} />\n            <Text>{item.title}</Text>\n            <Text>{item.text}</Text>\n        </View>\n    )\n\n    // idem pour _doneButton\n    const _nextButton = () => (\n        <View>\n            <Text>Suivant</Text>\n        </View>\n    )\n\n    // fin des slide\n    const _onDone = () => navigation.navigate('Home');\n\n    return (\n        <View>\n            <AppIntroSlider\n                renderItem={_renderItem}\n                data={slides}\n                onDone={_onDone}\n                bottomButton\n                dotStyle= // style du point couleur\n                activeDotStyle= // style du point avec couleur et taille diff\xe9rente\n                renderNextButton={_nextButton}\n                renderDoneButton={_doneButton}\n            />\n        </View>\n    )\n}\n")),(0,i.kt)("h3",{id:"toast"},"Toast"),(0,i.kt)("p",null,"Quand une action est r\xe9alis\xe9 les utilisateurs souhaitent voir une confirmation visuelle rapide"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import { ToastAndroid } from "react-native";\n\n// dans la fonction principale on app\xe8le showToast\nconst showToast = () => ToastAndroid.show("Votre message", ToastAndroid.SHORT);\n')),(0,i.kt)("h3",{id:"vibration"},"Vibration"),(0,i.kt)("p",null,"Quand on appuye sur un bouton les utilisateurs aiment avoir un petit vibrement pour confirmer l'appuye comme un retour aptique"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Ajouter la permission android.permission.VIBRATE")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Rajouter ",(0,i.kt)("inlineCode",{parentName:"p"},'<uses-permission android:name="android.permission.VIBRATE"/>')," dans ",(0,i.kt)("strong",{parentName:"p"},"AndroidManifest.xml"),"."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Vibration } from "react-native";\n\n// dans la fonction principale on app\xe8le vibrate\nconst vibrate = () => Vibration.vibrate(70);\n')),(0,i.kt)("h2",{id:"outil-externe"},"Outil externe"),(0,i.kt)("h3",{id:"d\xe9ploiement-facile"},"D\xe9ploiement facile"),(0,i.kt)("p",null,"Partager simplement l'application pour quel soit accessible en t\xe9lechargement"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.diawi.com/"},"Diawi")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.installonair.com/"},"InstallOnAir"))))}f.isMDXComponent=!0}}]);