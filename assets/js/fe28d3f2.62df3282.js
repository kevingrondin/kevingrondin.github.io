"use strict";(self.webpackChunkkevingrondin=self.webpackChunkkevingrondin||[]).push([[7304],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return v}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,v=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(v,o(o({ref:t},c),{},{components:n})):a.createElement(v,o({ref:t},c))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(7294),r=n(4334),i={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,o),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return y}});var a=n(3117),r=n(7294),i=n(4334),o=n(2466),l=n(6775),s=n(1980),u=n(7392),c=n(12);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function v(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=p(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[s,u]=v({queryString:n,groupId:a}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),b=(()=>{const e=s??d;return m({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{b&&l(b)}),[b]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,i]),tabValues:i}}var b=n(2389),k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==l&&(d(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},o,{className:(0,i.Z)("tabs__item",k.tabItem,o?.className,{"tabs__item--active":l===t})}),n??t)})))}function h(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=f(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",k.tabList)},r.createElement(g,(0,a.Z)({},e,t)),r.createElement(h,(0,a.Z)({},e,t)))}function y(e){const t=(0,b.Z)();return r.createElement(w,(0,a.Z)({key:String(t)},e))}},6782:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return v},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var a=n(3117),r=(n(7294),n(3905)),i=n(4866),o=n(5162);const l={sidebar_position:10},s="\ud83d\udd29 Astuce",u={unversionedId:"React Native/create-project/astuce",id:"React Native/create-project/astuce",title:"\ud83d\udd29 Astuce",description:"Quelque astuce \xe0 savoir sur la technologie React Native",source:"@site/docs/React Native/create-project/astuce.mdx",sourceDirName:"React Native/create-project",slug:"/React Native/create-project/astuce",permalink:"/wiki/docs/React Native/create-project/astuce",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/React Native/create-project/astuce.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"\u23f3 Background",permalink:"/wiki/docs/React Native/create-project/background"},next:{title:"\ud83d\udea2 Navigation",permalink:"/wiki/docs/React Native/wireframe/navigation"}},c={},d=[{value:"Android Natif",id:"android-natif",level:2},{value:"Ecran blanc avant SplashScreen",id:"ecran-blanc-avant-splashscreen",level:3},{value:"Bloquer l&#39;ecran en mode portrait",id:"bloquer-lecran-en-mode-portrait",level:3},{value:"ScreenShot",id:"screenshot",level:3},{value:"Javascript",id:"javascript",level:2},{value:"Bind",id:"bind",level:3},{value:"React Native",id:"react-native",level:2},{value:"BackButon avec useEffect",id:"backbuton-avec-useeffect",level:3},{value:"BackHandler",id:"backhandler",level:3},{value:"Button",id:"button",level:3},{value:"Flatlist",id:"flatlist",level:3},{value:"Route",id:"route",level:3},{value:"OnBoarding",id:"onboarding",level:3},{value:"Toast",id:"toast",level:3},{value:"Vibration",id:"vibration",level:3},{value:"Outil externe",id:"outil-externe",level:2},{value:"D\xe9ploiement facile",id:"d\xe9ploiement-facile",level:3}],p={toc:d},m="wrapper";function v(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-astuce"},"\ud83d\udd29 Astuce"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Quelque astuce \xe0 savoir sur la technologie React Native")),(0,r.kt)("h2",{id:"android-natif"},"Android Natif"),(0,r.kt)("h3",{id:"ecran-blanc-avant-splashscreen"},"Ecran blanc avant SplashScreen"),(0,r.kt)("p",null,"Petite sp\xe9cificit\xe9 qui permet de savoir si une application est r\xe9alis\xe9 en react native c'est un ecran blanc qui s'affiche avant sont ouverture"),(0,r.kt)("p",null,"Dans notre fichier ",(0,r.kt)("strong",{parentName:"p"},"styles.xml")," on ajoute les balises suivante dans la balise ",(0,r.kt)("strong",{parentName:"p"},"style")," ",(0,r.kt)("strong",{parentName:"p"},"windowDisablePreview")," desactive cette \xe9cran"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<item name="android:textColor">#000000</item>\n<item name="android:windowDisablePreview">true</item>\n<item name="android:windowNoTitle">true</item>\n<item name="android:windowActionBar">false</item>\n<item name="android:windowFullscreen">true</item>\n<item name="android:windowContentOverlay">@null</item>\n<item name="android:windowIsTranslucent">true</item>\n')),(0,r.kt)("admonition",{title:"Attention",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Cela peu engendr\xe9 des bugs, ne pas l'ins\xe9rer pendant la p\xe9riode de d\xe9veloppement")),(0,r.kt)("h3",{id:"bloquer-lecran-en-mode-portrait"},"Bloquer l'ecran en mode portrait"),(0,r.kt)("p",null,"On veut que quand le portable passe en paysage, le smartphone reste en mode portrait"),(0,r.kt)("p",null,"Dans le fichier ",(0,r.kt)("strong",{parentName:"p"},"AndroidManifest.xml")," on ajoute un attribut dans la balise ",(0,r.kt)("strong",{parentName:"p"},"activity")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<activity\n...\nandroid:screenOrientation="portrait" />\n')),(0,r.kt)("h3",{id:"screenshot"},"ScreenShot"),(0,r.kt)("p",null,"Si on veut eviter de diffuser des screenshot d'application avec des information confidentielle des clients, on bloque les screenshot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MainActivity.java"',title:'"MainActivity.java"'},"import android.os.Bundle;\nimport android.view.WindowManager;\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\n}\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Si on veux forcer le n\xe9ttoyage d'Android dans le repertoire ",(0,r.kt)("strong",{parentName:"p"},"android"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"gradlew clean\n")),(0,r.kt)("h2",{id:"javascript"},"Javascript"),(0,r.kt)("h3",{id:"bind"},"Bind"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Permet de pr\xe9charger les fonctions")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Pressable } from 'react-native';\n\nfonction Item({edit, id}) {\n    return (\n        <View>\n            <Pressable \n                onPress={edit.bind(this, id)}\n            >\n                <Text>{item.name}</Text>\n            </Pressable>\n        </View>\n    );\n}\n")),(0,r.kt)("h2",{id:"react-native"},"React Native"),(0,r.kt)("h3",{id:"backbuton-avec-useeffect"},"BackButon avec useEffect"),(0,r.kt)("p",null,"Quand on revien sur une page qui est d\xe9ja pass\xe9, le useEffect ne se relance plus"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'// en dehors de la fonction principale avec les autres import\nimport { useIsFocused } from "@react-navigation/native";\n\n// Dans la fonction principale\nconst isFocused = useIsFocused();\n\nReact.useEffect(() => {\n  if (isFocused) {\n    // chose \xe0 faire quand on revient sur la page\n  }\n}, [isFocused]);\n')),(0,r.kt)("h3",{id:"backhandler"},"BackHandler"),(0,r.kt)("p",null,"Sur certaine vue on veut bloquer le retour en arri\xe8re"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'// on rajoute BackHandler dans l\'import react-natif\nimport { BackHandler } from "react-native";\n\n// dans la fonction principale\nReact.useEffect(() => {\n  BackHandler.addEventListener("hardwareBackPress", () => true);\n  return () => BackHandler.removeEventListener("hardwareBackPress", () => true);\n}, []);\n')),(0,r.kt)("h3",{id:"button"},"Button"),(0,r.kt)("p",null,"Les element Pressable n'ont pas d'interactivit\xe9 UI, pour en rajouter"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Android",mdxType:"TabItem"},(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"L'attribut ",(0,r.kt)("strong",{parentName:"p"},"android_ripple")," est disponible que pour Android")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"<Pressable\n    android_ripple={{\n        color: '#ff0000',\n        borderless: true,\n        radius: 10,\n    }}\n    onPress={() => navigation.navigate(\"Android\")}\n>\n    <Text>Android</Text>\n</Pressable>\n"))),(0,r.kt)(o.Z,{value:"IOS",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'<Pressable\n    style={ pressData => pressData.pressed && { opacity: 0.5 } }\n    onPress={() => navigation.navigate("Android")}\n>\n    <Text>Android</Text>\n</Pressable>\n')))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"// on peu rajouter de l'animation\nconst animatedValue = new Animated.Value(1);\n\nconst onPressIn = () => {\n    Animated.spring(animatedValue, {\n        toValue: 0.9,\n        useNativeDriver: true\n    }).start()\n}\n\nconst onPressOut = () => {\n    Animated.spring(animatedValue, {\n        toValue: 1,\n        useNativeDriver: true\n    }).start()\n}\n\nconst animatedStyle = {\n    transform: [{scale: animatedValue }]\n}\n\nreturn (\n    <Animated.View style={animatedStyle}>\n        <TouchableHighlight\n            style={tw`rounded-xl`}\n            onPressIn={onPressIn}\n            onPressOut={onPressOut}\n        >\n            <View style={tw`flex justify-center items-center w-full h-16 bg-blue-600 rounded-xl`}>\n                <Text style={tw`text-white text-xl`}>{title}</Text>\n            </View>\n        </TouchableHighlight>\n    </Animated.View>\n)\n")),(0,r.kt)("h3",{id:"flatlist"},"Flatlist"),(0,r.kt)("p",null,"Un peu plus optimis\xe9 que ScrollView vous avez Flatlist"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const [items, setItems] = useState([])\n\n// Exemple avec ScrollView\n<ScrollView>\n    {items.map((item, index) => (\n        <View key={index}>\n            <Text>{item.title}</Text>\n        </View>\n    ))}\n</ScrollView>\n\n// Exemple avec Flatlist\n<FlatList\n    data={items}\n    renderItem={({ item }) => (\n        <View>\n            <Text>{item.title}</Text>\n        </View>\n    )}\n    keyExtractor={(item, index) => index}\n/>\n")),(0,r.kt)("h3",{id:"route"},"Route"),(0,r.kt)("p",null,"Si on est dans un composant qui\n",(0,r.kt)("em",{parentName:"p"}," n'h\xe9rite de ",(0,r.kt)("strong",{parentName:"em"},"navigation"))," n'est pas definis dans la liste des routes possible"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useNavigation } from "@react-navigation/core";\nimport { NativeStackNavigationProp } from "@react-navigation/native-stack";\n\n// si vous avez d\xe9fini une StackParams vous pouvez l\'importer ici\nimport StackParams from \'../navigation\'\n\n// dans la foncition principale\nconst navigation = useNavigation<NativeStackNavigationProp<StackParams>>();\n')),(0,r.kt)("h3",{id:"onboarding"},"OnBoarding"),(0,r.kt)("p",null,"Generalement en intro application pour expliquer son fonctionnement"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import AppIntroSlider from 'react-native-app-intro-slider';\n\n// data des diff\xe9rente slides\nconst slides = [\n    {\n        key: 1,\n        title: 'Premier titre',\n        text: 'Description',\n        image: 'Image'\n    }\n];\n\nconst onBoarding = () => {\n\n    //Rendu d'une slide\n    const _renderItem = ({ item }) => (\n        <View>\n            <Image source={item.image} />\n            <Text>{item.title}</Text>\n            <Text>{item.text}</Text>\n        </View>\n    )\n\n    // idem pour _doneButton\n    const _nextButton = () => (\n        <View>\n            <Text>Suivant</Text>\n        </View>\n    )\n\n    // fin des slide\n    const _onDone = () => navigation.navigate('Home');\n\n    return (\n        <View>\n            <AppIntroSlider\n                renderItem={_renderItem}\n                data={slides}\n                onDone={_onDone}\n                bottomButton\n                dotStyle= // style du point couleur\n                activeDotStyle= // style du point avec couleur et taille diff\xe9rente\n                renderNextButton={_nextButton}\n                renderDoneButton={_doneButton}\n            />\n        </View>\n    )\n}\n")),(0,r.kt)("h3",{id:"toast"},"Toast"),(0,r.kt)("p",null,"Quand une action est r\xe9alis\xe9 les utilisateurs souhaitent voir une confirmation visuelle rapide"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { ToastAndroid } from "react-native";\n\n// dans la fonction principale on app\xe8le showToast\nconst showToast = () => ToastAndroid.show("Votre message", ToastAndroid.SHORT);\n')),(0,r.kt)("h3",{id:"vibration"},"Vibration"),(0,r.kt)("p",null,"Quand on appuye sur un bouton les utilisateurs aiment avoir un petit vibrement pour confirmer l'appuye comme un retour aptique"),(0,r.kt)("admonition",{title:"Ajouter la permission android.permission.VIBRATE",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Rajouter ",(0,r.kt)("inlineCode",{parentName:"p"},'<uses-permission android:name="android.permission.VIBRATE"/>')," dans ",(0,r.kt)("strong",{parentName:"p"},"AndroidManifest.xml"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Vibration } from "react-native";\n\n// dans la fonction principale on app\xe8le vibrate\nconst vibrate = () => Vibration.vibrate(70);\n')),(0,r.kt)("h2",{id:"outil-externe"},"Outil externe"),(0,r.kt)("h3",{id:"d\xe9ploiement-facile"},"D\xe9ploiement facile"),(0,r.kt)("p",null,"Partager simplement l'application pour quel soit accessible en t\xe9lechargement"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.diawi.com/"},"Diawi")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.installonair.com/"},"InstallOnAir"))))}v.isMDXComponent=!0}}]);